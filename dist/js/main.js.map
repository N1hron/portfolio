{"version":3,"file":"main.js","mappings":"yBAGAA,OAAOC,iBAAiB,oBAAoB,MCH7B,SAAuBC,EAAiBC,EAAcC,GACjE,MAAMC,EAAUC,SAASC,cDGX,sBCFRC,EAAOF,SAASC,cDEc,cCD9BE,EAAQH,SAASC,cDC2B,qBCA5CG,EAAUJ,SAASC,cAAc,YAEvCF,EAAQJ,iBAAiB,SAAUU,IAC/BH,EAAKI,UAAUC,IAAI,oBACnBH,EAAQE,UAAUC,IAAI,kBACtBP,SAASQ,KAAKC,MAAMC,SAAW,QAAQ,IAG3CP,EAAMR,iBAAiB,SAAUU,IAC7BH,EAAKI,UAAUK,OAAO,oBACtBP,EAAQE,UAAUK,OAAO,kBACzBX,SAASQ,KAAKC,MAAMC,SAAW,MAAM,GAE7C,CDbIE,GEJW,WACX,MAAMC,EAAeb,SAASc,iBAAiB,0BAC9Bd,SAASc,iBAAiB,gCAElCC,SAAQ,CAACC,EAASC,KACvBJ,EAAaI,GAAGR,MAAMS,MAAQF,EAAQG,WAAW,GAEzD,CFFIC,EAAa,G","sources":["webpack://portfolio_project/./src/js/main.js","webpack://portfolio_project/./src/js/modules/hamburgerMenu.js","webpack://portfolio_project/./src/js/modules/progressBar.js"],"sourcesContent":["import hamburgerMenu from \"./modules/hamburgerMenu\";\r\nimport progressBar from \"./modules/progressBar\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    hamburgerMenu('.header__hamburger', '.sidepanel', '.sidepanel__close');\r\n    progressBar();\r\n})","export default function hamburgerMenu(triggerSelector, menuSelector, closeSelector) {\r\n    const trigger = document.querySelector(triggerSelector);\r\n    const menu = document.querySelector(menuSelector);\r\n    const close = document.querySelector(closeSelector);\r\n    const overlay = document.querySelector('.overlay');\r\n    \r\n    trigger.addEventListener('click', (event) => {\r\n        menu.classList.add('sidepanel_active');\r\n        overlay.classList.add('overlay_active');\r\n        document.body.style.overflow = 'hidden';\r\n    })\r\n\r\n    close.addEventListener('click', (event) => {\r\n        menu.classList.remove('sidepanel_active');\r\n        overlay.classList.remove('overlay_active');\r\n        document.body.style.overflow = 'auto';\r\n    })\r\n}","export default function progressBar() {\r\n    const progressBars = document.querySelectorAll('.skills__progress-fill');\r\n    const percents = document.querySelectorAll('.skills__progress-percentage');\r\n\r\n    percents.forEach((percent, i) => {\r\n        progressBars[i].style.width = percent.textContent;\r\n    })\r\n}"],"names":["window","addEventListener","triggerSelector","menuSelector","closeSelector","trigger","document","querySelector","menu","close","overlay","event","classList","add","body","style","overflow","remove","hamburgerMenu","progressBars","querySelectorAll","forEach","percent","i","width","textContent","progressBar"],"sourceRoot":""}